{"version":3,"file":"Dashboard-Cja0r8pO.js","sources":["../../src/components/admin/DashboardStats.tsx","../../src/components/admin/AnalyticsChart.tsx","../../src/components/admin/VendorTable.tsx","../../src/pages/admin/Dashboard.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { DollarSign, Users, ShoppingBag, TrendingUp } from \"lucide-react\";\r\n\r\ninterface StatCardProps {\r\n  title: string;\r\n  value: string;\r\n  change: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst StatCard = ({ title, value, change, icon }: StatCardProps) => (\r\n  <Card>\r\n    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n      <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\r\n      {icon}\r\n    </CardHeader>\r\n    <CardContent>\r\n      <div className=\"text-2xl font-bold\">{value}</div>\r\n      <p className=\"text-xs text-muted-foreground\">\r\n        {change} from last month\r\n      </p>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport const DashboardStats = () => {\r\n  const stats = [\r\n    {\r\n      title: \"Total Revenue\",\r\n      value: \"$45,231.89\",\r\n      change: \"+20.1%\",\r\n      icon: <DollarSign className=\"h-4 w-4 text-muted-foreground\" />,\r\n    },\r\n    {\r\n      title: \"Active Vendors\",\r\n      value: \"124\",\r\n      change: \"+15%\",\r\n      icon: <Users className=\"h-4 w-4 text-muted-foreground\" />,\r\n    },\r\n    {\r\n      title: \"Total Orders\",\r\n      value: \"2,345\",\r\n      change: \"+12.3%\",\r\n      icon: <ShoppingBag className=\"h-4 w-4 text-muted-foreground\" />,\r\n    },\r\n    {\r\n      title: \"Growth Rate\",\r\n      value: \"18.2%\",\r\n      change: \"+4.1%\",\r\n      icon: <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n      {stats.map((stat, index) => (\r\n        <StatCard key={index} {...stat} />\r\n      ))}\r\n    </div>\r\n  );\r\n};","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n  { month: 'Jan', revenue: 4000, orders: 240 },\r\n  { month: 'Feb', revenue: 3000, orders: 198 },\r\n  { month: 'Mar', revenue: 5000, orders: 305 },\r\n  { month: 'Apr', revenue: 2780, orders: 189 },\r\n  { month: 'May', revenue: 1890, orders: 140 },\r\n  { month: 'Jun', revenue: 2390, orders: 178 },\r\n];\r\n\r\nexport const AnalyticsChart = () => {\r\n  return (\r\n    <Card className=\"col-span-4\">\r\n      <CardHeader>\r\n        <CardTitle>Revenue Overview</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"h-[400px]\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"month\" />\r\n            <YAxis yAxisId=\"left\" />\r\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n            <Tooltip />\r\n            <Line\r\n              yAxisId=\"left\"\r\n              type=\"monotone\"\r\n              dataKey=\"revenue\"\r\n              stroke=\"#8884d8\"\r\n              name=\"Revenue\"\r\n            />\r\n            <Line\r\n              yAxisId=\"right\"\r\n              type=\"monotone\"\r\n              dataKey=\"orders\"\r\n              stroke=\"#82ca9d\"\r\n              name=\"Orders\"\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { toast } from \"sonner\";\r\n\r\ninterface Vendor {\r\n  id: string;\r\n  business_name: string;\r\n  products_count: number;\r\n  total_revenue: string;\r\n  status: \"active\" | \"pending\" | \"suspended\";\r\n}\r\n\r\nexport const VendorTable = () => {\r\n  const [vendors, setVendors] = useState<Vendor[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchVendors = async () => {\r\n      try {\r\n        const { data: vendorProfiles, error } = await supabase\r\n          .from(\"vendor_profiles\")\r\n          .select(`\r\n            id,\r\n            business_name,\r\n            status,\r\n            products (count),\r\n            analytics (total_sales)\r\n          `);\r\n\r\n        if (error) throw error;\r\n\r\n        const formattedVendors = vendorProfiles?.map((vendor: any) => ({\r\n          id: vendor.id,\r\n          business_name: vendor.business_name,\r\n          products_count: vendor.products?.[0]?.count || 0,\r\n          total_revenue: new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n          }).format(vendor.analytics?.[0]?.total_sales || 0),\r\n          status: vendor.status,\r\n        }));\r\n\r\n        setVendors(formattedVendors || []);\r\n      } catch (error) {\r\n        console.error('Error fetching vendors:', error);\r\n        toast.error(\"Failed to load vendors\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    // Initial fetch\r\n    fetchVendors();\r\n\r\n    // Set up real-time subscription\r\n    const channel = supabase\r\n      .channel('vendor-changes')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'vendor_profiles'\r\n        },\r\n        () => {\r\n          fetchVendors(); // Refresh data when changes occur\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      supabase.removeChannel(channel);\r\n    };\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading vendors...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rounded-md border\">\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Vendor</TableHead>\r\n            <TableHead>Products</TableHead>\r\n            <TableHead>Revenue</TableHead>\r\n            <TableHead>Status</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {vendors.map((vendor) => (\r\n            <TableRow key={vendor.id}>\r\n              <TableCell className=\"font-medium\">{vendor.business_name}</TableCell>\r\n              <TableCell>{vendor.products_count}</TableCell>\r\n              <TableCell>{vendor.total_revenue}</TableCell>\r\n              <TableCell>\r\n                <Badge\r\n                  variant={\r\n                    vendor.status === \"active\"\r\n                      ? \"default\"\r\n                      : vendor.status === \"pending\"\r\n                      ? \"secondary\"\r\n                      : \"destructive\"\r\n                  }\r\n                >\r\n                  {vendor.status}\r\n                </Badge>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};","import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport ProductManager from \"@/components/admin/products/ProductManager\";\r\nimport { DashboardStats } from \"@/components/admin/DashboardStats\";\r\nimport { AnalyticsChart } from \"@/components/admin/AnalyticsChart\";\r\nimport { VendorTable } from \"@/components/admin/VendorTable\";\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Admin Dashboard</h1>\r\n      \r\n      <DashboardStats />\r\n      \r\n      <div className=\"mt-8\">\r\n        <Tabs defaultValue=\"overview\">\r\n          <TabsList>\r\n            <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n            <TabsTrigger value=\"products\">Products</TabsTrigger>\r\n            <TabsTrigger value=\"vendors\">Vendors</TabsTrigger>\r\n          </TabsList>\r\n          \r\n          <TabsContent value=\"overview\">\r\n            <AnalyticsChart />\r\n          </TabsContent>\r\n          \r\n          <TabsContent value=\"products\">\r\n            <ProductManager />\r\n          </TabsContent>\r\n          \r\n          <TabsContent value=\"vendors\">\r\n            <VendorTable />\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"names":["StatCard","title","value","change","icon","jsxs","Card","CardHeader","jsx","CardTitle","CardContent","DashboardStats","stats","DollarSign","Users","ShoppingBag","TrendingUp","stat","index","data","AnalyticsChart","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Line","VendorTable","vendors","setVendors","useState","isLoading","setIsLoading","useEffect","fetchVendors","vendorProfiles","error","supabase","formattedVendors","vendor","_b","_a","_d","_c","toast","channel","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Badge","AdminDashboard","Tabs","TabsList","TabsTrigger","TabsContent","ProductManager"],"mappings":"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"}