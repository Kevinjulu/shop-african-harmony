{"version":3,"file":"Navbar-D-VoUKQr.js","sources":["../../src/components/navbar/Navbar.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Logo } from \"./Logo\";\r\nimport { SearchBar } from \"./SearchBar\";\r\nimport { DesktopNav } from \"./DesktopNav\";\r\nimport { MobileMenuButton } from \"./MobileMenuButton\";\r\nimport { MobileMenu } from \"./MobileMenu\";\r\nimport { useIsMobile } from \"@/hooks/use-mobile\";\r\n\r\nexport const Navbar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSticky, setIsSticky] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const isMobile = useIsMobile();\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setIsSticky(window.scrollY > 100);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsMenuOpen(false);\r\n  }, [location.pathname]);\r\n\r\n  const handleSearch = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (searchQuery.trim()) {\r\n      navigate(`/products?search=${encodeURIComponent(searchQuery)}`);\r\n      setIsMenuOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"relative\">\r\n      <div className=\"container mx-auto px-3 md:px-4\">\r\n        <div className=\"flex items-center justify-between h-14\">\r\n          <MobileMenuButton \r\n            isOpen={isMenuOpen}\r\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n          />\r\n          <Logo />\r\n          <SearchBar \r\n            searchQuery={searchQuery}\r\n            onSearchChange={(e) => setSearchQuery(e.target.value)}\r\n            onSearchSubmit={handleSearch}\r\n          />\r\n          <DesktopNav />\r\n        </div>\r\n      </div>\r\n\r\n      <MobileMenu \r\n        isOpen={isMenuOpen}\r\n        searchQuery={searchQuery}\r\n        onSearchChange={(e) => setSearchQuery(e.target.value)}\r\n        onSearchSubmit={handleSearch}\r\n        onClose={() => setIsMenuOpen(false)}\r\n      />\r\n    </nav>\r\n  );\r\n};"],"names":["Navbar","isMenuOpen","setIsMenuOpen","useState","searchQuery","setSearchQuery","isSticky","setIsSticky","navigate","useNavigate","location","useLocation","useIsMobile","useEffect","handleScroll","handleSearch","jsxs","jsx","MobileMenuButton","Logo","SearchBar","DesktopNav","MobileMenu"],"mappings":"yLASO,MAAMA,EAAS,IAAM,CAC1B,KAAM,CAACC,EAAYC,CAAa,EAAIC,WAAS,EAAK,EAC5C,CAACC,EAAaC,CAAc,EAAIF,WAAS,EAAE,EAC3C,CAACG,EAAUC,CAAW,EAAIJ,WAAS,EAAK,EACxCK,EAAWC,IACXC,EAAWC,IACAC,EAAY,EAE7BC,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAe,IAAM,CACbP,EAAA,OAAO,QAAU,GAAG,CAAA,EAG3B,cAAA,iBAAiB,SAAUO,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,CAAE,CAAA,EAELD,EAAAA,UAAU,IAAM,CACdX,EAAc,EAAK,CAAA,EAClB,CAACQ,EAAS,QAAQ,CAAC,EAEhB,MAAAK,EAAgB,GAAuB,CAC3C,EAAE,eAAe,EACbX,EAAY,SACdI,EAAS,oBAAoB,mBAAmBJ,CAAW,CAAC,EAAE,EAC9DF,EAAc,EAAK,EACrB,EAIA,OAAAc,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,iCACb,SAACD,EAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,OAAQjB,EACR,QAAS,IAAMC,EAAc,CAACD,CAAU,CAAA,CAC1C,QACCkB,EAAK,EAAA,EACNF,EAAA,IAACG,EAAA,CACC,YAAAhB,EACA,eAAiB,GAAMC,EAAe,EAAE,OAAO,KAAK,EACpD,eAAgBU,CAAA,CAClB,QACCM,EAAW,EAAA,CAAA,CAAA,CACd,CACF,CAAA,EAEAJ,EAAA,IAACK,EAAA,CACC,OAAQrB,EACR,YAAAG,EACA,eAAiB,GAAMC,EAAe,EAAE,OAAO,KAAK,EACpD,eAAgBU,EAChB,QAAS,IAAMb,EAAc,EAAK,CAAA,CACpC,CACF,CAAA,CAAA,CAEJ"}